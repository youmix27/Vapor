@using POCSQLCO.Models
@inject ISnackbar Snackbar
@inject Models.IVaporService VaporService
@using System.ComponentModel.DataAnnotations
@using POCSQLCO.Models.ViewModels
@rendermode InteractiveServer

<EditForm Model=@NouvelUtilisateur OnValidSubmit="Add">
    <DataAnnotationsValidator />
    <MudDialog>
        <TitleContent>
            <MudText Typo="Typo.h6">
                Ajouter Utilisateur
            </MudText>
        </TitleContent>
        <DialogContent>
            <MudTextField @bind-Value="NouvelUtilisateur.Pseudo" For="@(() => NouvelUtilisateur.Pseudo)" Label="Pseudo" />
            <MudTextField @bind-Value="NouvelUtilisateur.Password" For="@(() => NouvelUtilisateur.Password)" Label="Mot de passe" HelperText="choisissez un mdp fort" InputType="InputType.Password" />
            <MudTextField @bind-Value="NouvelUtilisateur.Password2" For="@(() => NouvelUtilisateur.Password2)" Label="Mot de passe" HelperText="répéter le mot de passe" InputType="InputType.Password" />
            <MudTextField @bind-Value="NouvelUtilisateur.Email" For="@(() => NouvelUtilisateur.Email)" Label="Mail" />
            <MudTextField @bind-Value="NouvelUtilisateur.Nom" For="@(() => NouvelUtilisateur.Nom)" Label="Nom" />
            <MudTextField @bind-Value="NouvelUtilisateur.Prenom" For="@(() => NouvelUtilisateur.Prenom)" Label="Prenom" />
            <MudTextField @bind-Value="NouvelUtilisateur.Ville" For="@(() => NouvelUtilisateur.Ville)" Label="Ville" />
            <MudTextField @bind-Value="NouvelUtilisateur.CodePostal" For="@(() => NouvelUtilisateur.CodePostal)" Label="Code Postal" />
            <MudTextField @bind-Value="NouvelUtilisateur.Adresse" For="@(() => NouvelUtilisateur.Adresse)" Label="Adresse" />
            <MudTextField @bind-Value="NouvelUtilisateur.Telephone" For="@(() => NouvelUtilisateur.Telephone)" Label="Numéro de Téléphone" />
        </DialogContent>
        <DialogActions>
            <MudAlert Class="mb-4" Severity="Severity.Error" hidden="@ErrorPseudo">Nom d'utilisateur déjà utilisé par un autre compte'</MudAlert>
            <MudButton OnClick="Cancel">Annuler</MudButton>
            <MudButton Color="Color.Primary" ButtonType="ButtonType.Submit">Ajouter</MudButton>
        </DialogActions>
    </MudDialog>
</EditForm>

@code {
    [CascadingParameter] MudDialogInstance MudDialog { get; set; }

    [SupplyParameterFromForm]
    public NouvelUtilisateur NouvelUtilisateur { get; set; } = new NouvelUtilisateur();

    public Utilisateur utilisateur { get; set; }
    public bool ErrorPseudo { get; set; } = true;

    private void Cancel()
    {
        MudDialog.Cancel();
    }

    private void Add()
    {
        Utilisateur utilisateur = VaporService.FindUtilisateurByPseudo(NouvelUtilisateur.Pseudo);
        if (utilisateur == null)
        {
            utilisateur = new Utilisateur();
            utilisateur.Pseudo = NouvelUtilisateur.Pseudo;
            utilisateur.Email = NouvelUtilisateur.Email;
            utilisateur.Adresse = NouvelUtilisateur.Adresse;
            utilisateur.Telephone = NouvelUtilisateur.Telephone;
            utilisateur.FiltreCs = true; //par défaut on filtre les contenus explicites, l'utilisateur devra le modifié manuellement dans les paramètres de son compte
            utilisateur.FiltreGore = true;
            utilisateur.CodePostal = NouvelUtilisateur.CodePostal;
            utilisateur.Ville = NouvelUtilisateur.Ville;
            utilisateur.Nom = NouvelUtilisateur.Nom;
            utilisateur.Prenom = NouvelUtilisateur.Prenom;
            utilisateur.IsAdmin = false;
            //création hash mot de passe
            utilisateur.HashMdp = BCrypt.Net.BCrypt.HashPassword(NouvelUtilisateur.Password);
            VaporService.InsertUtilisateur(utilisateur);
            Snackbar.Add("utilisateur ajouté", Severity.Success);
            MudDialog.Close(DialogResult.Ok(utilisateur.Id));
        }
        else
        {
            ErrorPseudo = false;
        }
    }
}