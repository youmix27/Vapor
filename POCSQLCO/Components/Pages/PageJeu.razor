@page "/Jeu/{jacquette}"
@using POCSQLCO.Models
@inject Models.IVaporService VaporService
@inject NavigationManager navManager
@rendermode InteractiveServer

<PageTitle>@Jeu.Libelle</PageTitle>

    <div Class="d-flex justify-center">
    <MudPaper Width="80%" Class="">
        <MudContainer Class="mt-4" Fixed = "true">
            <MudGrid Justify="Justify.Center" >
                
                    <MudItem xs="12" sm="8" md="6">
                        <MudText Align="Align.Center" Variant="Variant.H4">@Jeu.Libelle</MudText>
                        <MudImage ObjectFit="ObjectFit.Contain"  Src="@GetJeuSource(Jeu.Jaquette)" Alt="@Jeu.Jaquette" Elevation="25" Class="rounded-lg" />
                        <MudText Align="Align.Center">@Jeu.Description</MudText>
                        @switch (ExcpetionAchatJeu)
                    {
                        case "aucune":
                            <MudButton Class="mt-4" Color="Color.Primary" Variant="Variant.Filled" FullWidth="true" @onclick="() => AjouterAuPanier()">Ajouter au panier</MudButton>
                            break;
                        case "auPanier":
                            <MudButton Class="mt-4" Color="Color.Primary" Variant="Variant.Filled" FullWidth="true" Href="/panier">Jeu dans le panier</MudButton>
                            break;
                        case "nonSortie":
                            <MudButton Class="mt-4" Color="Color.Primary" Variant="Variant.Filled" FullWidth="true" Disabled>Sortie prochaine</MudButton>
                            break;
                        case "nonConnecte":
                            <MudButton Class="mt-4" Color="Color.Primary" Variant="Variant.Filled" FullWidth="true" Href="/Account/Login">Veuillez vous connecter</MudButton>
                            break;
                    }
                    
                    </MudItem>
                
            </MudGrid>
        </MudContainer>
    </MudPaper>
    </div>


@code {
    [CascadingParameter]
    private Task<AuthenticationState> authenticationState { get; set; }
    [Parameter]
    public string Jacquette { get; set; }

    public string ExcpetionAchatJeu { get; set; } = "aucune";

    public Jeu? Jeu { get; set; }

    public Commande? Panier { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Jeu = VaporService.FindJeuByJaquette(Jacquette);
        if(Jeu == null) // cas ou le jeu n'existe pas
        {
            navManager.NavigateTo("/", true);
        }
        var authState = await authenticationState;
        Utilisateur? utilisateur = VaporService.FindUtilisateurByPseudo(authState.User.Identity.Name);
        if (utilisateur != null) // cas utilisateur connecté
        {
            Panier = VaporService.FindCommandeNonTermineByUtilisateur(utilisateur);
            ContenuCommande? contenuCommande = VaporService.FindContenuCommandesByUtilisateurAndJeuAndCommandeNonTerminee(utilisateur, Jeu);
            if (contenuCommande != null) // on interdit au client de commander deux fois un même jeu
            {
                ExcpetionAchatJeu = "auPanier";
            }
            if (Jeu.Prix == null) // cas jeu non sortie
            {
                ExcpetionAchatJeu = "nonSortie";
            }
        }
        else // cas utilisateur non connecté
        {
            ExcpetionAchatJeu = "nonConnecte";
        }
    }

    private string GetJeuSource(string jaquette)
    {
        return "img/jeux/" + jaquette + ".jpg";
    }

    private async void AjouterAuPanier()
    {
        var authState = await authenticationState;
        Utilisateur utilisateur = VaporService.FindUtilisateurByPseudo(authState.User.Identity.Name);
        if (Panier == null) // cas ou le client n'a pas encore d'élément dans son panier
        {
            Panier = new Commande();
            Panier.UtilisateurId = utilisateur.Id;
            Panier.EstTermine = false;
            VaporService.InsertCommande(Panier);
        }
        ContenuCommande contenuCommande = new ContenuCommande();
        contenuCommande.CommandeId = Panier.Id;
        contenuCommande.UtilisateurId = Panier.UtilisateurId;
        contenuCommande.JeuId = Jeu.Id;
        VaporService.InsertContenuCommande(contenuCommande);
        navManager.NavigateTo("/Jeu/" + Jeu.Jaquette, true);
    }

}
